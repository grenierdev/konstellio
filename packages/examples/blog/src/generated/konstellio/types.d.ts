// Code generated by konstellio (@konstellio/cli@0.2.9). DO NOT EDIT.
// Please don't change this file manually but run `konstellio generate` to update it.
// For more information, please read the docs: https://konstell.io/docs/cli/

import { ID, Cursor, DateTime, Context as BaseContext, Extension as BaseExtension } from '@konstellio/server';
import { Collection } from '@konstellio/odm';
import Database from '@konstellio/db-sqlite';
import FileSystem from '@konstellio/fs-local';
import Cache from '@konstellio/cache-memory';
import MessageQueue from '@konstellio/mq-memory';

export interface UserGroup {
	id: ID;
	name: String;
	roles: String[];
}

export interface UserGroupIndexes {
	id: ID;
}

export interface UserGroupInputs {
	id?: ID;
	name: String;
	roles: String[];
}

export interface User {
	id: ID;
	username: String;
	password: String;
	groups: ID[];
}

export interface UserIndexes {
	id: ID;
	username: String;
}

export interface UserInputs {
	id?: ID;
	username: String;
	password: String;
	groups: ID[];
}

export interface Post {
	id: ID;
	title: String;
	slug: String;
	categories: ID[];
	postDate: DateTime;
	expireDate?: DateTime;
	author: ID;
	contributors: ID[];
	content: String;
}

export interface PostIndexes {
	id: ID;
	slug: String;
}

export interface PostInputs {
	id?: ID;
	title: {
		fr: String;
		en: String;
	};
	slug: {
		fr: String;
		en: String;
	};
	categories: ID[];
	postDate: DateTime;
	expireDate?: DateTime;
	author: ID;
	contributors: ID[];
	content: {
		fr: String;
		en: String;
	};
}

export interface PostCategory {
	id: ID;
	title: String;
	slug: String;
}

export interface PostCategoryIndexes {
	id: ID;
	slug: String;
}

export interface PostCategoryInputs {
	id?: ID;
	title: {
		fr: String;
		en: String;
	};
	slug: {
		fr: String;
		en: String;
	};
}

export interface Context extends BaseContext {
	database: Database;
	filesystem: FileSystem;
	cache: Cache;
	mq: MessageQueue;
	collection: {
		UserGroup: Collection<UserGroup, UserGroupIndexes, UserGroupInputs>
		User: Collection<User, UserIndexes, UserInputs>
		Post: Collection<Post, PostIndexes, PostInputs>
		PostCategory: Collection<PostCategory, PostCategoryIndexes, PostCategoryInputs>
	};
}

export interface Extension extends BaseExtension<Context> {}

